{% macro deserialize_field(f, assign_to, include_selection_check = True) -%}

if ({% if include_selection_check %}config.selections.contains("ğŸ‘‰f.nameğŸ‘ˆ") && {% endif %} data.contains("ğŸ‘‰f.nameğŸ‘ˆ")){
{% if f.type.is_object_type -%}

  ğŸ‘‰ assign_to ğŸ‘ˆ = ğŸ‘‰f.type.is_object_type.nameğŸ‘ˆ.from_dict(
  parent,
  field_data,
  inner_config,
  metadata,

);

{% elif f.type.is_interface -%}
if field_data:
        ğŸ‘‰ assign_to ğŸ‘ˆ = ğŸ‘‰f.type.is_interface.nameğŸ‘ˆ.from_dict(
        parent,
        field_data,
        inner_config,
        metadata,
    )
{% elif f.type.is_model -%}
{% if f.type.is_model.is_object_type -%}
ğŸ‘‰ assign_to ğŸ‘ˆ = QGraphQListModel(
  parent=parent,
  data=[ğŸ‘‰f.type.is_model.is_object_type.nameğŸ‘ˆ.from_dict(parent, data=node, config=inner_config, metadata=metadata) for
        node in field_data],
)
{% elif f.type.is_model.is_interface -%}
ğŸ‘‰ assign_to ğŸ‘ˆ = QGraphQListModel(
    parent=parent,
    data=[ğŸ‘‰f.type.is_model.is_interface.nameğŸ‘ˆ.from_dict(parent, data=node, config=inner_config, metadata=metadata) for
          node in field_data],
)
{% elif f.type.is_model.is_union -%}
model_data = []
for node in field_data:
    type_name = node['__typename']
    choice = inner_config.choices[type_name]
    model_data.append(
        __TYPE_MAP__[type_name].from_dict(self, node,
                                          choice, metadata)
    )
ğŸ‘‰ assign_to ğŸ‘ˆ = QGraphQListModel(parent, data=model_data)
{% endif %}
{% elif f.type.is_builtin_scalar -%}
ğŸ‘‰ assign_to ğŸ‘ˆ = data.value("ğŸ‘‰f.nameğŸ‘ˆ").ğŸ‘‰ f.type.type.from_json_convertor ğŸ‘ˆ;
{% elif f.is_custom_scalar -%}
ğŸ‘‰ assign_to ğŸ‘ˆ = SCALARS.ğŸ‘‰f.is_custom_scalar.__name__ğŸ‘ˆ.deserialize(field_data);
{% elif f.type.is_enum -%}
ğŸ‘‰ assign_to ğŸ‘ˆ = ğŸ‘‰f.type.is_enum.nameğŸ‘ˆ[field_data];
{% elif f.type.is_union -%}
type_name = field_data['__typename']
choice = inner_config.choices[type_name]
ğŸ‘‰ assign_to ğŸ‘ˆ = __TYPE_MAP__[type_name].from_dict(parent, field_data, choice, metadata);
{% endif -%}
};
{%- endmacro %}


