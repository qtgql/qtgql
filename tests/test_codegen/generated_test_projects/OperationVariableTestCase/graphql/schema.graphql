type Comment implements Node {
  id: ID!
  content: String!
  commenter: String!
}

input CreatePostInput {
  content: String!
  header: String!
}

"""Date with time (isoformat)"""
scalar DateTime

type Mutation {
  changePostHeader(postId: ID!, newHeader: String!): Post!
  createPost(input: CreatePostInput!): Post!
}

interface Node {
  id: ID!
}

type Post implements Node {
  id: ID!
  header: String!
  content: String!
  createdAt: DateTime!
  comments: [Comment!]!
}

type Query {
  post: Post!
  getPostById(id: ID!): Post!
  getEnumName(enumInput: SampleEnum!): String!
}

enum SampleEnum {
  A
  B
  C
}
