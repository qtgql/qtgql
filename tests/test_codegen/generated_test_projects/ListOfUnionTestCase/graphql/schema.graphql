type Cat {
  name: String!
  color: String!
}

union CatDog = Cat | Dog

type Dog implements Node {
  id: ID!
  name: String!
  age: Int!
}

type Mutation {
  insertToList(nodeId: ID!, at: Int!, name: String!, type: UnionTypes!): Person!
  modifyName(nodeId: ID!, at: Int!, name: String!): Person!
  removeAt(nodeId: ID!, at: Int!): Person!
}

interface Node {
  id: ID!
}

type Person implements Node {
  id: ID!
  pets: [CatDog!]!
  name: String!
}

type Query {
  randPerson: Person!
}

enum UnionTypes {
  PERSON
  DOG
}
