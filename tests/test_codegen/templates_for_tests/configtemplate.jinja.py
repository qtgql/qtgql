from pathlib import Path

from qtgqlcodegen.config import QtGqlConfig
{% if context.config.custom_scalars -%}
from qtgqlcodegen.types import CustomScalarDefinition
{% endif -%}
custom_scalars: dict[str, CustomScalarDefinition] = {}
{% for cs in context.config.custom_scalars.values() %}
custom_scalars["ğŸ‘‰ cs.graphql_name ğŸ‘ˆ"] = CustomScalarDefinition(
    name="ğŸ‘‰ cs.name ğŸ‘ˆ",
    graphql_name="ğŸ‘‰ cs.graphql_name ğŸ‘ˆ",
    to_qt_type="ğŸ‘‰ cs.to_qt_type ğŸ‘ˆ",
    deserialized_type="ğŸ‘‰ cs.deserialized_type ğŸ‘ˆ",
    include_path="ğŸ‘‰ cs.include_path ğŸ‘ˆ",
)
{% endfor -%}

config = QtGqlConfig(
    graphql_dir=Path(r"ğŸ‘‰ context.config.graphql_dir ğŸ‘ˆ"),
    env_name="ğŸ‘‰ context.config.env_name ğŸ‘ˆ",
    generated_dir_name="../gen",
    custom_scalars=custom_scalars,
    qml_plugins_path="ğŸ‘‰ context.config.qml_plugins_path ğŸ‘ˆ",
)
